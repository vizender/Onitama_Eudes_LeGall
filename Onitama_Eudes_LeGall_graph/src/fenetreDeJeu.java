
import java.util.Random;
import java.util.Scanner;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author victorlegall
 */
public class fenetreDeJeu extends javax.swing.JFrame {

    Joueur[] ListeJoueurs = new Joueur[2];
    Joueur joueurCourant;
    Grille grilleJeu = new Grille();
    Pion pionCourant;

    /**
     * Creates new form fenetreDeJeu
     */
    public fenetreDeJeu() {
        initComponents();
        //panneau_info_joueurs.setVisible(false);
        panneau_info_partie.setVisible(false);

        for (int i = 4; i >= 0; i--) {
            for (int j = 0; j < 5; j++) {
                Cellule cellule = new Cellule(i, j);
                grilleJeu.ajouterCellule(cellule, i, j);

                cellule.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        if (cellule.pionCourant!=null && cellule.pionCourant.couleur == joueurCourant.couleur) {     //Si un pion du joueur courant
                            grilleJeu.selectCellule(cellule.ligne, cellule.colonne);
                        } else if (cellule.pionCourant == null && grilleJeu.celluleSelect[0] != 5) {
                            grilleJeu.deplacerPion(cellule.ligne, cellule.colonne);
                            grilleJeu.celluleSelect[0]=5;
                            grilleJeu.celluleSelect[1]=5;
                            joueurSuivant();
                        }
                        panneau_grille.repaint();
                    }
                }
                );
                panneau_grille.add(cellule);              
                panneau_grille.repaint();
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panneau_grille = new javax.swing.JPanel();
        panneau_info_joueurs = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nom_joueur2 = new javax.swing.JTextField();
        nom_joueur1 = new javax.swing.JTextField();
        jbt_start = new javax.swing.JButton();
        panneau_info_partie = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabelC1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabelJ1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabelC2 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabelJ2 = new javax.swing.JLabel();
        panneau_carte6 = new javax.swing.JPanel();
        j1_carte2 = new javax.swing.JPanel();
        j2_carte2 = new javax.swing.JPanel();
        j2_carte1 = new javax.swing.JPanel();
        j1_carte1 = new javax.swing.JPanel();
        att_carte = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panneau_grille.setBackground(new java.awt.Color(240, 230, 230));
        panneau_grille.setLayout(new java.awt.GridLayout(5, 5));
        getContentPane().add(panneau_grille, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 200, 400, 400));

        panneau_info_joueurs.setBackground(new java.awt.Color(240, 200, 180));
        panneau_info_joueurs.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel1.setText("Joueur 2 :");
        panneau_info_joueurs.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel2.setText("Joueur 1 :");
        panneau_info_joueurs.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        nom_joueur2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        nom_joueur2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nom_joueur2ActionPerformed(evt);
            }
        });
        panneau_info_joueurs.add(nom_joueur2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 70, 170, -1));

        nom_joueur1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        nom_joueur1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nom_joueur1ActionPerformed(evt);
            }
        });
        panneau_info_joueurs.add(nom_joueur1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, 170, -1));

        jbt_start.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jbt_start.setText("Start");
        jbt_start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbt_startActionPerformed(evt);
            }
        });
        panneau_info_joueurs.add(jbt_start, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 120, -1, -1));

        getContentPane().add(panneau_info_joueurs, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 350, 180));

        panneau_info_partie.setBackground(new java.awt.Color(240, 200, 180));
        panneau_info_partie.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 26)); // NOI18N
        jLabel4.setText("Infos joueurs");
        panneau_info_partie.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jLabelC1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        panneau_info_partie.add(jLabelC1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 110, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        panneau_info_partie.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 140, -1, -1));

        jSeparator1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        panneau_info_partie.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 290, 10));

        jLabelJ1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        panneau_info_partie.add(jLabelJ1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 80, -1, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        panneau_info_partie.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 80, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel10.setText("Joueur 1");
        panneau_info_partie.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        jLabelC2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabelC2.setText(" ");
        panneau_info_partie.add(jLabelC2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 190, -1, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel11.setText("Couleur");
        panneau_info_partie.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel12.setText("Joueur 2");
        panneau_info_partie.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, -1, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel13.setText("Couleur");
        panneau_info_partie.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, -1, -1));

        jLabelJ2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        panneau_info_partie.add(jLabelJ2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 160, -1, -1));

        getContentPane().add(panneau_info_partie, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 550, 350, 230));

        panneau_carte6.setBackground(new java.awt.Color(240, 230, 200));
        panneau_carte6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(panneau_carte6, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 610, -1, -1));

        j1_carte2.setBackground(new java.awt.Color(240, 230, 200));
        j1_carte2.setLayout(new java.awt.GridLayout(1, 1));
        getContentPane().add(j1_carte2, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 610, 300, 174));

        j2_carte2.setBackground(new java.awt.Color(240, 230, 200));
        j2_carte2.setLayout(new java.awt.GridLayout(1, 1));
        getContentPane().add(j2_carte2, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 10, 300, 174));

        j2_carte1.setBackground(new java.awt.Color(240, 230, 200));
        j2_carte1.setLayout(new java.awt.GridLayout(1, 1));
        getContentPane().add(j2_carte1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 10, 300, 174));

        j1_carte1.setBackground(new java.awt.Color(240, 230, 200));
        j1_carte1.setLayout(new java.awt.GridLayout(1, 1));
        getContentPane().add(j1_carte1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 610, 300, 174));

        att_carte.setBackground(new java.awt.Color(240, 230, 200));
        att_carte.setLayout(new java.awt.GridLayout(1, 1));
        getContentPane().add(att_carte, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 320, 300, 174));

        setBounds(0, 0, 1075, 831);
    }// </editor-fold>//GEN-END:initComponents

    private void nom_joueur1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nom_joueur1ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_nom_joueur1ActionPerformed

    private void nom_joueur2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nom_joueur2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nom_joueur2ActionPerformed

    private void jbt_startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_startActionPerformed
        // TODO add your handling code here:
        panneau_info_joueurs.setVisible(true);
        panneau_info_partie.setVisible(true);
        initialiserPartie();
        attribuerCouleurAuxJoueurs();
        System.out.println("1er repaint");
        panneau_grille.repaint();
    }//GEN-LAST:event_jbt_startActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(fenetreDeJeu.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(fenetreDeJeu.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(fenetreDeJeu.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(fenetreDeJeu.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new fenetreDeJeu().setVisible(true);
            }
        });
    }

    
    public void joueurSuivant(){
        if (joueurCourant == ListeJoueurs[0]) {
                    joueurCourant = ListeJoueurs[1];
                } else {
                    joueurCourant = ListeJoueurs[0];
                }
    }
    
    public void attribuerCouleurAuxJoueurs() {
        Random r = new Random();
        int R = r.nextInt(2); // on créé ici un entier aléatoire entre 0 et 1
        if (R == 0) {
            ListeJoueurs[0].affecterCouleur("rouge");
            ListeJoueurs[1].affecterCouleur("bleu");
            joueurCourant = ListeJoueurs[0];
        } else {
            ListeJoueurs[1].affecterCouleur("rouge");
            ListeJoueurs[0].affecterCouleur("bleu"); // on affecte des couleurs aux joueurs en fonction du chiffre aléatoire
            joueurCourant = ListeJoueurs[1];
        }
    }

    //Void pour creer et distribuer 5 cartes de jeu au debut de la partie
    public void creationCartes() {

        //On definit toutes les cartes, avec les coordonées jouables relatives au pion, et le nom.
        int[][] coordboar = {{2, 1}, {1, 2}, {2, 3}};
        Carte cboar = new Carte("boar", coordboar);

        int[][] coordcobra = {{2, 1}, {1, 3}, {3, 3}};
        Carte ccobra = new Carte("cobra", coordcobra);

        int[][] coordcrab = {{2, 0}, {1, 2}, {2, 4}};
        Carte ccrab = new Carte("crab", coordcrab);

        int[][] coordcrane = {{3, 1}, {2, 1}, {3, 3}};
        Carte ccrane = new Carte("crane", coordcrane);

        int[][] coorddragon = {{0, 1}, {1, 3}, {3, 3}, {4, 1}};
        Carte cdragon = new Carte("dragon", coorddragon);

        int[][] coordeel = {{1, 1}, {1, 3}, {3, 2}};
        Carte ceel = new Carte("eel", coordeel);

        int[][] coordelephant = {{1, 1}, {1, 2}, {3, 1}, {3, 2}};
        Carte celephant = new Carte("elephant", coordelephant);

        int[][] coordgoose = {{1, 1}, {1, 2}, {3, 2}, {3, 3}};
        Carte cgoose = new Carte("goose", coordgoose);

        int[][] coordhorse = {{1, 2}, {2, 1}, {2, 3}};
        Carte chorse = new Carte("horse", coordhorse);

        int[][] coordmantis = {{1, 1}, {2, 3}, {3, 1}};
        Carte cmantis = new Carte("mantis", coordmantis);

        int[][] coordmonkey = {{1, 1}, {1, 3}, {3, 1}, {3, 3}};
        Carte cmonkey = new Carte("monkey", coordmonkey);

        int[][] coordox = {{2, 1}, {3, 2}, {2, 3}};
        Carte cox = new Carte("ox", coordox);

        int[][] coordrabbit = {{1, 3}, {3, 1}, {4, 2}};
        Carte crabbit = new Carte("rabbit", coordrabbit);

        int[][] coordrooster = {{1, 2}, {1, 3}, {3, 1}, {3, 2}};
        Carte crooster = new Carte("rooster", coordrooster);

        int[][] coordtiger = {{2, 0}, {2, 3}};
        Carte ctiger = new Carte("tiger", coordtiger);

        //On mets ttes les cartes dans un tableau qu'on va ensuite piocher
        Carte[] TabCartes = {cboar, ccobra, ccrab, ccrane, cdragon, ceel, celephant,
            cgoose, chorse, cmantis, cmonkey, cox, crabbit, crooster, ctiger};

        //Tableau des 5 cartes utilisées dans une partie
        Carte[] CarteJeu = new Carte[5];
        Random r = new Random();
        boolean test;

        //Shenanigans pour selectionner 5 cartes au hasard sans doublons
        //PS : on ne fait pas d'operations sur le tableau des 16 cartes originels par securite, donc la fonction ci-dessous est pas belle du tout
        for (int i = 0; i < 5; i++) { // On repete l'operation pour les 5 cartes
            do { // On repete une selection de carte tant que y'a doublons
                int R = r.nextInt(15); //On prends aleatoirement une des 16 cartes du tableau ci dessus
                test = false;
                int tot = 0; // tot et test vont servir de verification aux doublons (pas tres joli mais fonctionnel)
                CarteJeu[i] = TabCartes[R]; // On assinge la carte aleatoirement choisie au tableau carte de jeu
                for (int j = 0; j < i; j++) { // On verifie que y'a pas de les doublons un a un avec les precedentes cartes
                    if (CarteJeu[i] != CarteJeu[j]) {
                        tot++; // Comme on verifie un a un, on utilise tot pour confirmer que tout est bon
                    }
                }
                if (tot == i) {
                    test = true; // Si toutes les cartes precedentes sont bien differentes, alors on est bon
                }
            } while (test == false); // On confirme pas de doublon, on passe a l'attribution de la carte suivante
        }

        j1_carte1.add(CarteJeu[0]);
        j1_carte2.add(CarteJeu[1]);
        j2_carte1.add(CarteJeu[2]);
        j2_carte2.add(CarteJeu[3]);
        att_carte.add(CarteJeu[4]);

        j1_carte1.repaint();
        j1_carte2.repaint();
        j1_carte2.repaint();
        j2_carte2.repaint();
        att_carte.repaint();
    }

    public void creationPion() {
        for (int i = 0; i < 5; i++) {
            grilleJeu.tabCellule[0][i].pionCourant = new Pion("bleu", false);
            grilleJeu.tabCellule[4][i].pionCourant = new Pion("rouge", false);
        }
        grilleJeu.tabCellule[0][2].pionCourant.roi = true;
        grilleJeu.tabCellule[4][2].pionCourant.roi = true;
    }

    public void initialiserPartie() {

        String nomJoueur1 = nom_joueur1.getText();
        Joueur j1 = new Joueur(nomJoueur1);
        String nomJoueur2 = nom_joueur2.getText();
        Joueur j2 = new Joueur(nomJoueur2);
        ListeJoueurs[0] = j1;
        ListeJoueurs[1] = j2;

        this.attribuerCouleurAuxJoueurs();

        jLabelJ1.setText(nomJoueur1);
        jLabelJ2.setText(nomJoueur2);
        jLabelC1.setText(j1.couleur);
        jLabelC2.setText(j2.couleur);

        grilleJeu.tabCellule[0][2].trone = true;
        grilleJeu.tabCellule[4][2].trone = true;

        //System.out.println(pionCourant.couleur);
        creationPion();
        creationCartes();

    }
    /*
    public void debuterPartie(){
        do{
            if (pionCourant.couleur==joueurCourant.couleur){
                do{
                    
                }while(pionCourant.couleur=!joueurCourant.couleur)
            }
        }while(1==1) ; //condition de victoire
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel att_carte;
    private javax.swing.JPanel j1_carte1;
    private javax.swing.JPanel j1_carte2;
    private javax.swing.JPanel j2_carte1;
    private javax.swing.JPanel j2_carte2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelC1;
    private javax.swing.JLabel jLabelC2;
    private javax.swing.JLabel jLabelJ1;
    private javax.swing.JLabel jLabelJ2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton jbt_start;
    private javax.swing.JTextField nom_joueur1;
    private javax.swing.JTextField nom_joueur2;
    private javax.swing.JPanel panneau_carte6;
    private javax.swing.JPanel panneau_grille;
    private javax.swing.JPanel panneau_info_joueurs;
    private javax.swing.JPanel panneau_info_partie;
    // End of variables declaration//GEN-END:variables
}
